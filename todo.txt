
Make Application be a Part and unify Part handling

* "new" and "edit" as subresources
** POST /foo/new -> POST /foo
** POST /foo/12/edit -> PUT /foo/12

Current user

Commands

* request context, determining return handling (processing, view)
  * json
  * xml
  * xhr?
  * mobile
  * iPhone

* templates (see Sinatra::Templates)
    * layout
    * inline
    * precompiled

* persistence
	https://github.com/rails/rails/tree/master/activemodel
	Hash
	

* return type
  * redirect
  * file (see Sinatra::Helpers::StaticFile, #attachment, #send_file

* subresources
  * POST /thing/99/foo?value=bar same as POST /thing/99?foo=bar


* permissions
  * allow(lambda |user|)

* errors
  * x return type

* "rake routes" script
  - shows the URLs and the Object and file names that implement them

* different plugins
** Rack version
** Sinatra version
** Rails version
** JS version? (1-page app)

Sinatra-type goodies:
* upload file (multipart)
* cache_control, expires, last_modified
* session
* etag
* serve static files from public directory (see Sinatra::Base#static!)
* bind to particular hostname/interface

Hook to run code at app startup
Logging
